{"version":3,"sources":["serviceWorker.js","screens/styles.jsx","components/InputBox.jsx","components/Btn.jsx","screens/SignInForm.jsx","screens/Home.jsx","index.js"],"names":["Boolean","window","location","hostname","match","styles","body","fontFamily","minHeight","backgroundColor","display","flexDirection","padding","centerTitle","paddingTop","height","width","textAlign","main","justifyContent","alignItems","form","borderRadius","boxShadow","table","border","tableTr","InputBox","state","error","inputText","this","props","onChangeProps","regex","errorText","placeholder","nameProp","value","style","color","name","type","onChange","onBlur","e","setState","test","target","borderBottom","fontSize","marginTop","Component","Btn","bg","title","onClickProp","isDisable","disabled","borderColor","marginBottom","SignInForm","showMsg","onChangeHandle","nam","val","changeItemsProps","handleSubmitForm","preventDefault","editMode","handleUpdate","handleSignIn","myBtnClick","username","isDisabled","item","email","phone","onSubmit","styleBtn","Home","initialItem","list","selectedItemIndex","newList","handleDelete","allList","filtered","filter","ls","handleEdit","input","index","newItem","length","thStyle","thStyleDel","map","key","tdStyle","onClick","btnEdit","btnDel","marginLeft","marginRight","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4397c802.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = {\n  body: {\n    fontFamily: '\"Special Elite\", cursive',\n    minHeight: '100vh',\n    backgroundColor: '#E0E0E0',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 20,\n  },\n  centerTitle: {\n    backgroundColor: '#8d8d8d',\n    paddingTop: 40,\n    height: 80,\n    width: '100%',\n    textAlign: 'center',\n  },\n  main: {\n    backgroundColor: '#E0E0E0',\n    display: 'flex',\n    height: 500,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  form: {\n    height: 400,\n    width: 400,\n    backgroundColor: '#eeeeee',\n    borderRadius: 8,\n    boxShadow: '2px 2px 10px #1e1e1e',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  table: {\n    border: '1px solid white',\n    boxShadow: '2px 2px 10px #1e1e1e',\n    textAlign: 'center',\n  },\n  tableTr: {\n    border: '2px solid black',\n    textAlign: 'center',\n  },\n};\nexport default styles;\n","import React, { Component } from 'react';\n\nexport default class InputBox extends Component {\n  state = {\n    error: false,\n    inputText: '',\n  };\n  render() {\n    const {\n      onChangeProps,\n      regex,\n      errorText,\n      placeholder,\n      nameProp,\n      value,\n    } = this.props;\n    return (\n      <div\n        style={{\n          color: 'black',\n          width: '100%',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          fontFamily: '\"Special Elite\", cursive',\n        }}\n      >\n        <input\n          {...this.props}\n          name={nameProp}\n          value={value}\n          type='text'\n          placeholder={placeholder}\n          onChange={onChangeProps}\n          onBlur={(e) => {\n            this.setState({\n              error: !regex.test(e.target.value),\n              inputText: e.target.value,\n            });\n          }}\n          style={{\n            width: '80%',\n            border: 'none',\n            height: 30,\n            fontFamily: '\"Special Elite\", cursive',\n            borderBottom: '1px solid #000',\n          }}\n        />\n        {this.state.error ? (\n          <span style={{ color: '#ba2d65', fontSize: 12, marginTop: 5 }}>\n            {errorText}\n          </span>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Btn = ({ bg, onClickProp, title, isDisable }) => {\n  return (\n    <div>\n      <button\n        type='submit'\n        disabled={isDisable}\n        style={{\n          width: 120,\n          height: 40,\n          backgroundColor: bg,\n          fontFamily: '\"Special Elite\", cursive',\n          borderColor: bg,\n          // border: 'none',\n          borderRadius: 4,\n          marginBottom: 18,\n          marginTop: 10,\n        }}\n      >\n        {title}\n      </button>\n    </div>\n  );\n};\nexport default Btn;\n","import React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport InputBox from \"../components/InputBox\";\nimport Btn from \"../components/Btn\";\n\nexport default class SignInForm extends Component {\n  state = {\n    showMsg: false,\n  };\n\n  onChangeHandle = (e) => {\n    let nam = e.target.name;\n    let val = e.target.value;\n    this.props.changeItemsProps({ nam, val });\n  };\n\n  handleSubmitForm = (e) => {\n    e.preventDefault();\n    {\n      !this.props.editMode\n        ? this.props.handleSignIn()\n        : this.props.handleUpdate();\n    }\n  };\n\n  myBtnClick = () => {\n    this.setState({\n      username: this.state.username,\n      showMsg: true,\n    });\n  };\n\n  render() {\n    let isDisabled =\n      this.props.item.username === \"\" ||\n      this.props.item.email === \"\" ||\n      this.props.item.phone === \"\";\n    return (\n      <form style={styles.form} onSubmit={this.handleSubmitForm}>\n        <h2 style={{ textAlign: \"center\" }}>\n          {this.props.editMode ? \"Update\" : \"New Contact\"}\n        </h2>\n        <InputBox\n          nameProp=\"username\"\n          placeholder=\"Username\"\n          regex={/^[a-z0-9]{2,}$/}\n          errorText=\"username cannot include space\"\n          value={this.props.item.username}\n          onChangeProps={this.onChangeHandle}\n        />\n        <InputBox\n          nameProp=\"email\"\n          placeholder=\"Email\"\n          regex={/^[a-z0-9]{3,}@[2-z]{2,}\\.[a-z]{2,4}$/i}\n          errorText=\"invalid E-mail format\"\n          value={this.props.item.email}\n          onChangeProps={this.onChangeHandle}\n        />\n        <InputBox\n          nameProp=\"phone\"\n          placeholder=\"Phone No.\"\n          regex={/^07[0-9]{9}$/}\n          errorText=\"invalid Mobile Number format\"\n          value={this.props.item.phone}\n          onChangeProps={this.onChangeHandle}\n        />\n        <div style={styleBtn}>\n          <Btn\n            title={this.props.editMode ? \"Update\" : \"Submit\"}\n            bg=\"#bdbdbd\"\n            isDisable={isDisabled}\n          />\n          {this.state.showMsg ? <span> added to Address Book</span> : null}\n        </div>\n      </form>\n    );\n  }\n}\nconst styleBtn = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  marginTop: 10,\n};\n","import React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport SignInForm from \"./SignInForm\";\n\nexport default class Home extends Component {\n  initialItem = {\n    username: \"\",\n    email: \"\",\n    phone: \"\",\n  };\n\n  state = {\n    item: this.initialItem,\n    list: [],\n    editMode: false,\n    selectedItemIndex: null,\n  };\n\n  handleSignIn = () => {\n    this.setState({\n      list: [...this.state.list, this.state.item],\n      // list: [...prevState.list, prevState.item],\n      item: this.initialItem,\n      editMode: false,\n    });\n  };\n\n  handleUpdate = () => {\n    // const newList = [\n    //   ...this.state.list.slice(0, this.state.selectedItemIndex),\n    //   this.state.item,\n    //   ...this.state.list.slice(this.state.selectedItemIndex + 1),\n    // ];\n    let newList = this.state.list;\n    newList[this.state.selectedItemIndex] = this.state.item;\n    this.setState({\n      list: newList,\n      item: this.initialItem,\n      editMode: false,\n    });\n  };\n\n  handleDelete = (allList) => {\n    const filtered = this.state.list.filter((ls) => ls !== allList);\n    this.setState({\n      list: filtered,\n    });\n  };\n\n  handleEdit = (input, index) => {\n    this.setState({\n      item: input,\n      editMode: true,\n      selectedItemIndex: index,\n    });\n  };\n\n  changeItemsProps = ({ nam, val }) => {\n    let newItem = { ...this.state.item, [nam]: val };\n    this.setState({\n      item: newItem,\n    });\n  };\n\n  render() {\n    return (\n      <div style={styles.body}>\n        <div style={styles.centerTitle}>\n          <h1>Address Book</h1>\n        </div>\n        <div style={styles.main}>\n          <SignInForm\n            handleSignIn={this.handleSignIn}\n            item={{ ...this.state.item }}\n            changeItemsProps={this.changeItemsProps}\n            editMode={this.state.editMode}\n            handleUpdate={this.handleUpdate}\n          />\n        </div>\n        <div>contacts:</div>\n\n        {this.state.list.length > 0 ? (\n          <table style={styles.table}>\n            <thead>\n              <tr style={styles.tableTr}>\n                <th style={thStyle}>USERNAME</th>\n                <th style={thStyle}>EMAIL ADDRESS</th>\n                <th style={thStyle}>PHONE NUMBER</th>\n                <th style={thStyleDel}></th>\n              </tr>\n            </thead>\n            {this.state.list.map((item, index) => (\n              <tbody>\n                <tr key={item.index} style={styles.tableTr}>\n                  <td style={tdStyle}>{item.username}</td>\n                  <td style={tdStyle}>{item.email}</td>\n                  <td style={tdStyle}>{item.phone}</td>\n                  <td style={tdStyle}>\n                    <button\n                      onClick={() => this.handleEdit(item, index)}\n                      style={btnEdit}\n                    >\n                      EDIT\n                    </button>\n                    <button\n                      onClick={() => this.handleDelete(item)}\n                      style={btnDel}\n                    >\n                      DELETE\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        ) : null}\n      </div>\n    );\n  }\n}\nconst thStyle = {\n  width: \"27%\",\n  border: \"none\",\n  height: 30,\n  fontFamily: '\"Special Elite\", cursive',\n  borderBottom: \"1px solid #000\",\n  backgroundColor: \"white\",\n};\nconst thStyleDel = {\n  width: \"19%\",\n  border: \"none\",\n  height: 30,\n  fontFamily: '\"Special Elite\", cursive',\n  borderBottom: \"1px solid #000\",\n  backgroundColor: \"white\",\n};\nconst tdStyle = {\n  border: \"none\",\n  height: 40,\n  borderBottom: \"1px solid #000\",\n  backgroundColor: \"#bdbdbd\",\n};\nconst btnDel = {\n  padding: 8,\n  width: \"40%\",\n  fontFamily: '\"Special Elite\", cursive',\n  backgroundColor: \"#8d8d8d\",\n  border: \"none\",\n  borderRadius: 4,\n  marginLeft: 6,\n};\nconst btnEdit = {\n  padding: 8,\n  width: \"40%\",\n  fontFamily: '\"Special Elite\", cursive',\n  backgroundColor: \"#E0E0E0\",\n  border: \"none\",\n  borderRadius: 4,\n  marginRight: 6,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n// import App from './App';\nimport Home from './screens/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}