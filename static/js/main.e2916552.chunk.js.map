{"version":3,"sources":["serviceWorker.js","App.js","screens/styles.jsx","components/InputBox.jsx","components/Btn.jsx","screens/SignInForm.jsx","screens/Home.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Input","Component","props","label","placeholder","type","value","valueProp","onChange","onChangeInp","Card","details","styles","body","fontFamily","minHeight","backgroundColor","display","flexDirection","padding","centerTitle","paddingTop","height","width","textAlign","main","justifyContent","alignItems","form","borderRadius","boxShadow","table","border","tableTr","InputBox","state","error","inputText","this","onChangeProps","regex","errorText","nameProp","style","color","name","onBlur","e","setState","test","target","borderBottom","fontSize","marginTop","Btn","bg","title","onClickProp","isDisable","disabled","borderColor","marginBottom","SignInForm","username","email","phone","showMsg","onChangeHandle","nam","val","handleSignIn","newEntry","prevState","list","handleSubmitForm","preventDefault","myBtnClick","isDisabled","onSubmit","Home","handleDelete","allList","filtered","filter","ls","handleEdit","input","console","log","length","thStyle","thStyleDel","map","item","key","tdStyle","onClick","btnEdit","btnDel","marginLeft","marginRight","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e2916552.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    value: '',\n    details: [],\n  };\n  handleChangeValue = (e) => {\n    this.setState({\n      value: e.target.value,\n      // details: [...this.state.value],\n    });\n  };\n  handleSubmitBtn = () => {\n    this.setState({\n      details: [...this.state.details, this.state.value],\n      value: '',\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Input\n          label='Input'\n          onChangeInp={this.handleChangeValue}\n          valueProp={this.state.value}\n        />\n        {/* <input type='text' onChange={this.handleChangeValue}></input> */}\n        <button onClick={this.handleSubmitBtn}>Submit</button>\n        <Card details={this.state.value} />\n        {this.state.details.map((det) => (\n          <p>{det}</p>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst Input = (props) => {\n  return (\n    <>\n      <label>{props.label}</label>\n      <input\n        placeholder='input text ...'\n        type='text'\n        value={props.valueProp}\n        onChange={props.onChangeInp}\n      >\n        {}\n      </input>\n    </>\n  );\n};\n\nconst Card = (props) => {\n  return <div>{props.details}</div>;\n};\n","const styles = {\n  body: {\n    fontFamily: '\"Special Elite\", cursive',\n    minHeight: '100vh',\n    backgroundColor: '#E0E0E0',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 20,\n  },\n  centerTitle: {\n    backgroundColor: '#8d8d8d',\n    paddingTop: 40,\n    height: 80,\n    width: '100%',\n    textAlign: 'center',\n  },\n  main: {\n    backgroundColor: '#E0E0E0',\n    display: 'flex',\n    height: 500,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  form: {\n    height: 400,\n    width: 400,\n    backgroundColor: '#eeeeee',\n    borderRadius: 8,\n    boxShadow: '2px 2px 10px #1e1e1e',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  table: {\n    border: '1px solid white',\n    boxShadow: '2px 2px 10px #1e1e1e',\n    textAlign: 'center',\n  },\n  tableTr: {\n    border: '2px solid black',\n    textAlign: 'center',\n  },\n};\nexport default styles;\n","import React, { Component } from 'react';\n\nexport default class InputBox extends Component {\n  state = {\n    error: false,\n    inputText: '',\n  };\n  render() {\n    const {\n      onChangeProps,\n      regex,\n      errorText,\n      placeholder,\n      nameProp,\n      value,\n    } = this.props;\n    return (\n      <div\n        style={{\n          color: 'black',\n          width: '100%',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          fontFamily: '\"Special Elite\", cursive',\n        }}\n      >\n        <input\n          {...this.props}\n          name={nameProp}\n          value={value}\n          type='text'\n          placeholder={placeholder}\n          onChange={onChangeProps}\n          onBlur={(e) => {\n            this.setState({\n              error: !regex.test(e.target.value),\n              inputText: e.target.value,\n            });\n          }}\n          style={{\n            width: '80%',\n            border: 'none',\n            height: 30,\n            fontFamily: '\"Special Elite\", cursive',\n            borderBottom: '1px solid #000',\n          }}\n        />\n        {this.state.error ? (\n          <span style={{ color: '#ba2d65', fontSize: 12, marginTop: 5 }}>\n            {errorText}\n          </span>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Btn = ({ bg, onClickProp, title, isDisable }) => {\n  return (\n    <div>\n      <button\n        type='submit'\n        disabled={isDisable}\n        style={{\n          width: 120,\n          height: 40,\n          backgroundColor: bg,\n          fontFamily: '\"Special Elite\", cursive',\n          borderColor: bg,\n          // border: 'none',\n          borderRadius: 4,\n          marginBottom: 18,\n          marginTop: 10,\n        }}\n      >\n        {title}\n      </button>\n    </div>\n  );\n};\nexport default Btn;\n","import React, { Component } from 'react';\nimport styles from './styles';\nimport InputBox from '../components/InputBox';\nimport Btn from '../components/Btn';\n\nexport default class SignInForm extends Component {\n  state = {\n    username: '',\n    email: '',\n    phone: '',\n    showMsg: false,\n  };\n\n  onChangeHandle = (e) => {\n    let nam = e.target.name;\n    let val = e.target.value;\n    this.setState({ [nam]: val });\n  };\n  handleSignIn = (newEntry) => {\n    this.setState((prevState) => ({ list: [...prevState.list, newEntry] }));\n  };\n  handleSubmitForm = (e) => {\n    e.preventDefault();\n    let { username, email, phone } = this.state;\n    this.props.handleSignIn({ username, email, phone });\n    this.setState({ username: '', email: '', phone: '' });\n  };\n\n  myBtnClick = () => {\n    this.setState({\n      username: this.state.username,\n      showMsg: true,\n    });\n  };\n\n  render() {\n    let isDisabled =\n      this.state.username === '' ||\n      this.state.email === '' ||\n      this.state.phone === '';\n    return (\n      <form style={styles.form} onSubmit={this.handleSubmitForm}>\n        <h2 style={{ textAlign: 'center' }}>New Contact</h2>\n        {/* <label>Username</label> */}\n        <InputBox\n          nameProp='username'\n          placeholder='Username'\n          regex={/^[a-z0-9]{2,}$/}\n          errorText='username cannot include space'\n          value={this.state.username}\n          onChangeProps={this.onChangeHandle}\n        />\n        <InputBox\n          nameProp='email'\n          placeholder='Email'\n          regex={/^[a-z0-9]{3,}@[2-z]{2,}\\.[a-z]{2,4}$/i}\n          errorText='invalid E-mail format'\n          value={this.state.email}\n          onChangeProps={this.onChangeHandle}\n        />\n        <InputBox\n          nameProp='phone'\n          placeholder='Phone No.'\n          regex={/^07[0-9]{9}$/}\n          errorText='invalid Mobile Number format'\n          value={this.state.phone}\n          onChangeProps={this.onChangeHandle}\n        />\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n            marginTop: 10,\n          }}\n        >\n          <Btn title='Submit' bg='#bdbdbd' isDisable={isDisabled} />\n          {this.state.showMsg ? <span> added to Address Book</span> : null}\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styles from './styles';\nimport SignInForm from './SignInForm';\n\nexport default class Home extends Component {\n  state = {\n    list: [],\n  };\n  handleSignIn = (newEntry) => {\n    this.setState((prevState) => ({ list: [...prevState.list, newEntry] }));\n  };\n  handleDelete = (allList) => {\n    const filtered = this.state.list.filter((ls) => ls !== allList);\n    this.setState({\n      list: filtered,\n    });\n  };\n  handleEdit = (input) => {\n    console.log(input);\n  };\n  render() {\n    return (\n      <div style={styles.body}>\n        <div style={styles.centerTitle}>\n          <h1>Address Book</h1>\n        </div>\n        <div style={styles.main}>\n          <SignInForm handleSignIn={this.handleSignIn} />\n        </div>\n        <div>contacts:</div>\n\n        {this.state.list.length > 0 ? (\n          <table style={styles.table}>\n            <thead>\n              <tr style={styles.tableTr}>\n                <th style={thStyle}>USERNAME</th>\n                <th style={thStyle}>EMAIL ADDRESS</th>\n                <th style={thStyle}>PHONE NUMBER</th>\n                <th style={thStyleDel}></th>\n              </tr>\n            </thead>\n            {this.state.list.map((item) => (\n              <tbody>\n                <tr key={item.username} style={styles.tableTr}>\n                  <td style={tdStyle}>{item.username}</td>\n                  <td style={tdStyle}>{item.email}</td>\n                  <td style={tdStyle}>{item.phone}</td>\n                  <td style={tdStyle}>\n                    <button\n                      onClick={() => this.handleEdit(item)}\n                      style={btnEdit}\n                    >\n                      EDIT\n                    </button>\n                    <button\n                      onClick={() => this.handleDelete(item)}\n                      style={btnDel}\n                    >\n                      DELETE\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        ) : null}\n      </div>\n    );\n  }\n}\nconst thStyle = {\n  width: '27%',\n  border: 'none',\n  height: 30,\n  fontFamily: '\"Special Elite\", cursive',\n  borderBottom: '1px solid #000',\n  backgroundColor: 'white',\n};\nconst thStyleDel = {\n  width: '19%',\n  border: 'none',\n  height: 30,\n  fontFamily: '\"Special Elite\", cursive',\n  borderBottom: '1px solid #000',\n  backgroundColor: 'white',\n};\nconst tdStyle = {\n  border: 'none',\n  height: 40,\n  borderBottom: '1px solid #000',\n  backgroundColor: '#bdbdbd',\n};\nconst btnDel = {\n  padding: 8,\n  width: '40%',\n  fontFamily: '\"Special Elite\", cursive',\n  backgroundColor: '#8d8d8d',\n  border: 'none',\n  borderRadius: 4,\n  marginLeft: 6,\n};\nconst btnEdit = {\n  padding: 8,\n  width: '40%',\n  fontFamily: '\"Special Elite\", cursive',\n  backgroundColor: '#E0E0E0',\n  border: 'none',\n  borderRadius: 4,\n  marginRight: 6,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport Home from './screens/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}